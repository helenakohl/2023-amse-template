transform CelsiusToFahrenheit {
    from tempCelsius oftype decimal;
    to tempFahrenheit oftype decimal;

    tempFahrenheit: ((tempCelsius * 9) / 5) + 32 ;
}


pipeline BatteryPipeline {
    block DataExtractor oftype HttpExtractor { url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip"; }
    block ZipArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }
    block BatteryFilePicker oftype FilePicker {
        path: "/data.csv";
    }
    block BatteryTextFileInterpreter oftype TextFileInterpreter {}
    
    block BatteryCSVInterpreter oftype CSVInterpreter { 
        delimiter: ";";
    }
    block ColumnDataSelector oftype CellRangeSelector {
        select: range A1:K*;
    }
    block TemperaturHeaderWriter oftype CellWriter {
        at: cell E1;
        write: ["Temperatur"];
    }
    block BatterietemperaturHeaderWriter oftype CellWriter {
        at: cell J1;
        write: ["Batterietemperatur"];
    }
    block BatteryTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "Geraet" oftype integer,
            "Hersteller" oftype text,
            "Model" oftype text,
            "Monat" oftype integer,
            "Temperatur" oftype decimal,
            "Batterietemperatur" oftype decimal,
            "Geraet aktiv" oftype text
        ];
    }
    block CelsiusToFahrenheitTransformer1 oftype TableTransformer {
        inputColumn: 'Temperatur';
        outputColumn: 'Temperatur';
        use: CelsiusToFahrenheit;
    }
    block CelsiusToFahrenheitTransformer2 oftype TableTransformer {
        inputColumn: 'Batterietemperatur';
        outputColumn: 'Batterietemperatur';
        use: CelsiusToFahrenheit;
    }
    block DatabaseLoader oftype SQLiteLoader { 
        table: "temperatures"; 
        file: "temperatures.sqlite"; 
    }

    DataExtractor
    ->ZipArchiveInterpreter
    ->BatteryFilePicker
    ->BatteryTextFileInterpreter
    ->BatteryCSVInterpreter
    ->ColumnDataSelector
    ->TemperaturHeaderWriter
    ->BatterietemperaturHeaderWriter
    ->BatteryTableInterpreter
    ->CelsiusToFahrenheitTransformer1
    ->CelsiusToFahrenheitTransformer2
    ->DatabaseLoader
;}


